/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  GetDataEnumKind,
  GetDataEnumKindContent,
  Serializer,
  dataEnum,
  struct,
  tuple,
  u64,
  unit,
} from '@metaplex-foundation/umi/serializers';

export type ValidationResultsOffset =
  | { __kind: 'NoOffset' }
  | { __kind: 'Anchor' }
  | { __kind: 'Custom'; fields: [bigint] };

export type ValidationResultsOffsetArgs =
  | { __kind: 'NoOffset' }
  | { __kind: 'Anchor' }
  | { __kind: 'Custom'; fields: [number | bigint] };

export function getValidationResultsOffsetSerializer(): Serializer<
  ValidationResultsOffsetArgs,
  ValidationResultsOffset
> {
  return dataEnum<ValidationResultsOffset>(
    [
      ['NoOffset', unit()],
      ['Anchor', unit()],
      [
        'Custom',
        struct<GetDataEnumKindContent<ValidationResultsOffset, 'Custom'>>([
          ['fields', tuple([u64()])],
        ]),
      ],
    ],
    { description: 'ValidationResultsOffset' }
  ) as Serializer<ValidationResultsOffsetArgs, ValidationResultsOffset>;
}

// Data Enum Helpers.
export function validationResultsOffset(
  kind: 'NoOffset'
): GetDataEnumKind<ValidationResultsOffsetArgs, 'NoOffset'>;
export function validationResultsOffset(
  kind: 'Anchor'
): GetDataEnumKind<ValidationResultsOffsetArgs, 'Anchor'>;
export function validationResultsOffset(
  kind: 'Custom',
  data: GetDataEnumKindContent<ValidationResultsOffsetArgs, 'Custom'>['fields']
): GetDataEnumKind<ValidationResultsOffsetArgs, 'Custom'>;
export function validationResultsOffset<
  K extends ValidationResultsOffsetArgs['__kind'],
>(kind: K, data?: any): Extract<ValidationResultsOffsetArgs, { __kind: K }> {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}
export function isValidationResultsOffset<
  K extends ValidationResultsOffset['__kind'],
>(
  kind: K,
  value: ValidationResultsOffset
): value is ValidationResultsOffset & { __kind: K } {
  return value.__kind === kind;
}
