/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { PublicKey } from '@metaplex-foundation/umi';
import {
  GetDataEnumKind,
  GetDataEnumKindContent,
  Serializer,
  dataEnum,
  publicKey as publicKeySerializer,
  struct,
  tuple,
} from '@metaplex-foundation/umi/serializers';
import {
  BaseLinkedDataKey,
  BaseLinkedDataKeyArgs,
  BasePluginAuthority,
  BasePluginAuthorityArgs,
  getBaseLinkedDataKeySerializer,
  getBasePluginAuthoritySerializer,
} from '.';

export type BaseExternalPluginAdapterKey =
  | { __kind: 'LifecycleHook'; fields: [PublicKey] }
  | { __kind: 'AssetLinkedLifecycleHook'; fields: [PublicKey] }
  | { __kind: 'Oracle'; fields: [PublicKey] }
  | { __kind: 'SecureDataStore'; fields: [BasePluginAuthority] }
  | { __kind: 'AssetLinkedSecureDataStore'; fields: [BasePluginAuthority] }
  | { __kind: 'DataSection'; fields: [BaseLinkedDataKey] };

export type BaseExternalPluginAdapterKeyArgs =
  | { __kind: 'LifecycleHook'; fields: [PublicKey] }
  | { __kind: 'AssetLinkedLifecycleHook'; fields: [PublicKey] }
  | { __kind: 'Oracle'; fields: [PublicKey] }
  | { __kind: 'SecureDataStore'; fields: [BasePluginAuthorityArgs] }
  | { __kind: 'AssetLinkedSecureDataStore'; fields: [BasePluginAuthorityArgs] }
  | { __kind: 'DataSection'; fields: [BaseLinkedDataKeyArgs] };

export function getBaseExternalPluginAdapterKeySerializer(): Serializer<
  BaseExternalPluginAdapterKeyArgs,
  BaseExternalPluginAdapterKey
> {
  return dataEnum<BaseExternalPluginAdapterKey>(
    [
      [
        'LifecycleHook',
        struct<
          GetDataEnumKindContent<BaseExternalPluginAdapterKey, 'LifecycleHook'>
        >([['fields', tuple([publicKeySerializer()])]]),
      ],
      [
        'AssetLinkedLifecycleHook',
        struct<
          GetDataEnumKindContent<
            BaseExternalPluginAdapterKey,
            'AssetLinkedLifecycleHook'
          >
        >([['fields', tuple([publicKeySerializer()])]]),
      ],
      [
        'Oracle',
        struct<GetDataEnumKindContent<BaseExternalPluginAdapterKey, 'Oracle'>>([
          ['fields', tuple([publicKeySerializer()])],
        ]),
      ],
      [
        'SecureDataStore',
        struct<
          GetDataEnumKindContent<
            BaseExternalPluginAdapterKey,
            'SecureDataStore'
          >
        >([['fields', tuple([getBasePluginAuthoritySerializer()])]]),
      ],
      [
        'AssetLinkedSecureDataStore',
        struct<
          GetDataEnumKindContent<
            BaseExternalPluginAdapterKey,
            'AssetLinkedSecureDataStore'
          >
        >([['fields', tuple([getBasePluginAuthoritySerializer()])]]),
      ],
      [
        'DataSection',
        struct<
          GetDataEnumKindContent<BaseExternalPluginAdapterKey, 'DataSection'>
        >([['fields', tuple([getBaseLinkedDataKeySerializer()])]]),
      ],
    ],
    { description: 'BaseExternalPluginAdapterKey' }
  ) as Serializer<
    BaseExternalPluginAdapterKeyArgs,
    BaseExternalPluginAdapterKey
  >;
}

// Data Enum Helpers.
export function baseExternalPluginAdapterKey(
  kind: 'LifecycleHook',
  data: GetDataEnumKindContent<
    BaseExternalPluginAdapterKeyArgs,
    'LifecycleHook'
  >['fields']
): GetDataEnumKind<BaseExternalPluginAdapterKeyArgs, 'LifecycleHook'>;
export function baseExternalPluginAdapterKey(
  kind: 'AssetLinkedLifecycleHook',
  data: GetDataEnumKindContent<
    BaseExternalPluginAdapterKeyArgs,
    'AssetLinkedLifecycleHook'
  >['fields']
): GetDataEnumKind<
  BaseExternalPluginAdapterKeyArgs,
  'AssetLinkedLifecycleHook'
>;
export function baseExternalPluginAdapterKey(
  kind: 'Oracle',
  data: GetDataEnumKindContent<
    BaseExternalPluginAdapterKeyArgs,
    'Oracle'
  >['fields']
): GetDataEnumKind<BaseExternalPluginAdapterKeyArgs, 'Oracle'>;
export function baseExternalPluginAdapterKey(
  kind: 'SecureDataStore',
  data: GetDataEnumKindContent<
    BaseExternalPluginAdapterKeyArgs,
    'SecureDataStore'
  >['fields']
): GetDataEnumKind<BaseExternalPluginAdapterKeyArgs, 'SecureDataStore'>;
export function baseExternalPluginAdapterKey(
  kind: 'AssetLinkedSecureDataStore',
  data: GetDataEnumKindContent<
    BaseExternalPluginAdapterKeyArgs,
    'AssetLinkedSecureDataStore'
  >['fields']
): GetDataEnumKind<
  BaseExternalPluginAdapterKeyArgs,
  'AssetLinkedSecureDataStore'
>;
export function baseExternalPluginAdapterKey(
  kind: 'DataSection',
  data: GetDataEnumKindContent<
    BaseExternalPluginAdapterKeyArgs,
    'DataSection'
  >['fields']
): GetDataEnumKind<BaseExternalPluginAdapterKeyArgs, 'DataSection'>;
export function baseExternalPluginAdapterKey<
  K extends BaseExternalPluginAdapterKeyArgs['__kind'],
>(
  kind: K,
  data?: any
): Extract<BaseExternalPluginAdapterKeyArgs, { __kind: K }> {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}
export function isBaseExternalPluginAdapterKey<
  K extends BaseExternalPluginAdapterKey['__kind'],
>(
  kind: K,
  value: BaseExternalPluginAdapterKey
): value is BaseExternalPluginAdapterKey & { __kind: K } {
  return value.__kind === kind;
}
