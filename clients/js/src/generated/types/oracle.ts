/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Option, OptionOrNullable, PublicKey } from '@metaplex-foundation/umi';
import {
  Serializer,
  option,
  publicKey as publicKeySerializer,
  struct,
} from '@metaplex-foundation/umi/serializers';
import { ExtraAccount, ExtraAccountArgs, getExtraAccountSerializer } from '.';

export type Oracle = { baseAddress: PublicKey; pda: Option<ExtraAccount> };

export type OracleArgs = {
  baseAddress: PublicKey;
  pda: OptionOrNullable<ExtraAccountArgs>;
};

export function getOracleSerializer(): Serializer<OracleArgs, Oracle> {
  return struct<Oracle>(
    [
      ['baseAddress', publicKeySerializer()],
      ['pda', option(getExtraAccountSerializer())],
    ],
    { description: 'Oracle' }
  ) as Serializer<OracleArgs, Oracle>;
}
