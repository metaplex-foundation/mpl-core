/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Option, OptionOrNullable, PublicKey } from '@metaplex-foundation/umi';
import {
  Serializer,
  option,
  publicKey as publicKeySerializer,
  struct,
} from '@metaplex-foundation/umi/serializers';
import {
  BaseExtraAccount,
  BaseExtraAccountArgs,
  getBaseExtraAccountSerializer,
} from '.';

export type BaseOracle = {
  baseAddress: PublicKey;
  pda: Option<BaseExtraAccount>;
};

export type BaseOracleArgs = {
  baseAddress: PublicKey;
  pda: OptionOrNullable<BaseExtraAccountArgs>;
};

export function getBaseOracleSerializer(): Serializer<
  BaseOracleArgs,
  BaseOracle
> {
  return struct<BaseOracle>(
    [
      ['baseAddress', publicKeySerializer()],
      ['pda', option(getBaseExtraAccountSerializer())],
    ],
    { description: 'BaseOracle' }
  ) as Serializer<BaseOracleArgs, BaseOracle>;
}
