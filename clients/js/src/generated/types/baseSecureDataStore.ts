/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Serializer, struct } from '@metaplex-foundation/umi/serializers';
import {
  BasePluginAuthority,
  BasePluginAuthorityArgs,
  ExternalPluginAdapterSchema,
  ExternalPluginAdapterSchemaArgs,
  getBasePluginAuthoritySerializer,
  getExternalPluginAdapterSchemaSerializer,
} from '.';

export type BaseSecureDataStore = {
  dataAuthority: BasePluginAuthority;
  schema: ExternalPluginAdapterSchema;
};

export type BaseSecureDataStoreArgs = {
  dataAuthority: BasePluginAuthorityArgs;
  schema: ExternalPluginAdapterSchemaArgs;
};

export function getBaseSecureDataStoreSerializer(): Serializer<
  BaseSecureDataStoreArgs,
  BaseSecureDataStore
> {
  return struct<BaseSecureDataStore>(
    [
      ['dataAuthority', getBasePluginAuthoritySerializer()],
      ['schema', getExternalPluginAdapterSchemaSerializer()],
    ],
    { description: 'BaseSecureDataStore' }
  ) as Serializer<BaseSecureDataStoreArgs, BaseSecureDataStore>;
}
