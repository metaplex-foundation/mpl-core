/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Option, OptionOrNullable } from '@metaplex-foundation/umi';
import {
  Serializer,
  array,
  option,
  struct,
} from '@metaplex-foundation/umi/serializers';
import {
  ExternalPluginSchema,
  ExternalPluginSchemaArgs,
  ExtraAccount,
  ExtraAccountArgs,
  getExternalPluginSchemaSerializer,
  getExtraAccountSerializer,
} from '.';

export type LifecycleHook = {
  extraAccounts: Option<Array<ExtraAccount>>;
  schema: Option<ExternalPluginSchema>;
};

export type LifecycleHookArgs = {
  extraAccounts: OptionOrNullable<Array<ExtraAccountArgs>>;
  schema: OptionOrNullable<ExternalPluginSchemaArgs>;
};

export function getLifecycleHookSerializer(): Serializer<
  LifecycleHookArgs,
  LifecycleHook
> {
  return struct<LifecycleHook>(
    [
      ['extraAccounts', option(array(getExtraAccountSerializer()))],
      ['schema', option(getExternalPluginSchemaSerializer())],
    ],
    { description: 'LifecycleHook' }
  ) as Serializer<LifecycleHookArgs, LifecycleHook>;
}
