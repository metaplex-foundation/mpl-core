/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Option, OptionOrNullable } from '@metaplex-foundation/umi';
import {
  Serializer,
  option,
  struct,
} from '@metaplex-foundation/umi/serializers';
import {
  ExternalPluginSchema,
  ExternalPluginSchemaArgs,
  getExternalPluginSchemaSerializer,
} from '.';

export type DataStore = { schema: Option<ExternalPluginSchema> };

export type DataStoreArgs = {
  schema: OptionOrNullable<ExternalPluginSchemaArgs>;
};

export function getDataStoreSerializer(): Serializer<DataStoreArgs, DataStore> {
  return struct<DataStore>(
    [['schema', option(getExternalPluginSchemaSerializer())]],
    { description: 'DataStore' }
  ) as Serializer<DataStoreArgs, DataStore>;
}
