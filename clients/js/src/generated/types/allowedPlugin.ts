/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { PublicKey } from '@metaplex-foundation/umi';
import {
  Serializer,
  publicKey as publicKeySerializer,
  struct,
} from '@metaplex-foundation/umi/serializers';
import {
  PluginAuthorityType,
  PluginAuthorityTypeArgs,
  getPluginAuthorityTypeSerializer,
} from '.';

export type AllowedPlugin = {
  address: PublicKey;
  authorityType: PluginAuthorityType;
};

export type AllowedPluginArgs = {
  address: PublicKey;
  authorityType: PluginAuthorityTypeArgs;
};

export function getAllowedPluginSerializer(): Serializer<
  AllowedPluginArgs,
  AllowedPlugin
> {
  return struct<AllowedPlugin>(
    [
      ['address', publicKeySerializer()],
      ['authorityType', getPluginAuthorityTypeSerializer()],
    ],
    { description: 'AllowedPlugin' }
  ) as Serializer<AllowedPluginArgs, AllowedPlugin>;
}
