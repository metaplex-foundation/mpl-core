/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Option, OptionOrNullable } from '@metaplex-foundation/umi';
import {
  Serializer,
  option,
  struct,
} from '@metaplex-foundation/umi/serializers';
import {
  ExternalPluginAdapterSchema,
  ExternalPluginAdapterSchemaArgs,
  getExternalPluginAdapterSchemaSerializer,
} from '.';

export type BaseLinkedAppDataUpdateInfo = {
  schema: Option<ExternalPluginAdapterSchema>;
};

export type BaseLinkedAppDataUpdateInfoArgs = {
  schema: OptionOrNullable<ExternalPluginAdapterSchemaArgs>;
};

export function getBaseLinkedAppDataUpdateInfoSerializer(): Serializer<
  BaseLinkedAppDataUpdateInfoArgs,
  BaseLinkedAppDataUpdateInfo
> {
  return struct<BaseLinkedAppDataUpdateInfo>(
    [['schema', option(getExternalPluginAdapterSchemaSerializer())]],
    { description: 'BaseLinkedAppDataUpdateInfo' }
  ) as Serializer<BaseLinkedAppDataUpdateInfoArgs, BaseLinkedAppDataUpdateInfo>;
}
