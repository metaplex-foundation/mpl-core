/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  getStructDecoder,
  getStructEncoder,
  getUnitDecoder,
  getUnitEncoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type GetDiscriminatedUnionVariant,
  type GetDiscriminatedUnionVariantContent,
} from '@solana/kit';

export type PluginAuthority =
  | { __kind: 'None' }
  | { __kind: 'Owner' }
  | { __kind: 'UpdateAuthority' }
  | { __kind: 'Address'; address: Address };

export type PluginAuthorityArgs = PluginAuthority;

export function getPluginAuthorityEncoder(): Encoder<PluginAuthorityArgs> {
  return getDiscriminatedUnionEncoder([
    ['None', getUnitEncoder()],
    ['Owner', getUnitEncoder()],
    ['UpdateAuthority', getUnitEncoder()],
    ['Address', getStructEncoder([['address', getAddressEncoder()]])],
  ]);
}

export function getPluginAuthorityDecoder(): Decoder<PluginAuthority> {
  return getDiscriminatedUnionDecoder([
    ['None', getUnitDecoder()],
    ['Owner', getUnitDecoder()],
    ['UpdateAuthority', getUnitDecoder()],
    ['Address', getStructDecoder([['address', getAddressDecoder()]])],
  ]);
}

export function getPluginAuthorityCodec(): Codec<
  PluginAuthorityArgs,
  PluginAuthority
> {
  return combineCodec(getPluginAuthorityEncoder(), getPluginAuthorityDecoder());
}

// Data Enum Helpers.
export function pluginAuthority(
  kind: 'None'
): GetDiscriminatedUnionVariant<PluginAuthorityArgs, '__kind', 'None'>;
export function pluginAuthority(
  kind: 'Owner'
): GetDiscriminatedUnionVariant<PluginAuthorityArgs, '__kind', 'Owner'>;
export function pluginAuthority(
  kind: 'UpdateAuthority'
): GetDiscriminatedUnionVariant<
  PluginAuthorityArgs,
  '__kind',
  'UpdateAuthority'
>;
export function pluginAuthority(
  kind: 'Address',
  data: GetDiscriminatedUnionVariantContent<
    PluginAuthorityArgs,
    '__kind',
    'Address'
  >
): GetDiscriminatedUnionVariant<PluginAuthorityArgs, '__kind', 'Address'>;
export function pluginAuthority<K extends PluginAuthorityArgs['__kind'], Data>(
  kind: K,
  data?: Data
) {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isPluginAuthority<K extends PluginAuthority['__kind']>(
  kind: K,
  value: PluginAuthority
): value is PluginAuthority & { __kind: K } {
  return value.__kind === kind;
}
