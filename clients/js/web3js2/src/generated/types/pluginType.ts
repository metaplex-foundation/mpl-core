/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getEnumDecoder,
  getEnumEncoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';

export enum PluginType {
  Royalties,
  FreezeDelegate,
  BurnDelegate,
  TransferDelegate,
  UpdateDelegate,
  PermanentFreezeDelegate,
  Attributes,
  PermanentTransferDelegate,
  PermanentBurnDelegate,
  Edition,
  MasterEdition,
  AddBlocker,
  ImmutableMetadata,
  VerifiedCreators,
  Autograph,
}

export type PluginTypeArgs = PluginType;

export function getPluginTypeEncoder(): Encoder<PluginTypeArgs> {
  return getEnumEncoder(PluginType);
}

export function getPluginTypeDecoder(): Decoder<PluginType> {
  return getEnumDecoder(PluginType);
}

export function getPluginTypeCodec(): Codec<PluginTypeArgs, PluginType> {
  return combineCodec(getPluginTypeEncoder(), getPluginTypeDecoder());
}
