/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  getStructDecoder,
  getStructEncoder,
  getTupleDecoder,
  getTupleEncoder,
  getU64Decoder,
  getU64Encoder,
  getUnitDecoder,
  getUnitEncoder,
  type Codec,
  type Decoder,
  type Encoder,
  type GetDiscriminatedUnionVariant,
  type GetDiscriminatedUnionVariantContent,
} from '@solana/kit';

export type ValidationResultsOffset =
  | { __kind: 'NoOffset' }
  | { __kind: 'Anchor' }
  | { __kind: 'Custom'; fields: readonly [bigint] };

export type ValidationResultsOffsetArgs =
  | { __kind: 'NoOffset' }
  | { __kind: 'Anchor' }
  | { __kind: 'Custom'; fields: readonly [number | bigint] };

export function getValidationResultsOffsetEncoder(): Encoder<ValidationResultsOffsetArgs> {
  return getDiscriminatedUnionEncoder([
    ['NoOffset', getUnitEncoder()],
    ['Anchor', getUnitEncoder()],
    [
      'Custom',
      getStructEncoder([['fields', getTupleEncoder([getU64Encoder()])]]),
    ],
  ]);
}

export function getValidationResultsOffsetDecoder(): Decoder<ValidationResultsOffset> {
  return getDiscriminatedUnionDecoder([
    ['NoOffset', getUnitDecoder()],
    ['Anchor', getUnitDecoder()],
    [
      'Custom',
      getStructDecoder([['fields', getTupleDecoder([getU64Decoder()])]]),
    ],
  ]);
}

export function getValidationResultsOffsetCodec(): Codec<
  ValidationResultsOffsetArgs,
  ValidationResultsOffset
> {
  return combineCodec(
    getValidationResultsOffsetEncoder(),
    getValidationResultsOffsetDecoder()
  );
}

// Data Enum Helpers.
export function validationResultsOffset(
  kind: 'NoOffset'
): GetDiscriminatedUnionVariant<
  ValidationResultsOffsetArgs,
  '__kind',
  'NoOffset'
>;
export function validationResultsOffset(
  kind: 'Anchor'
): GetDiscriminatedUnionVariant<
  ValidationResultsOffsetArgs,
  '__kind',
  'Anchor'
>;
export function validationResultsOffset(
  kind: 'Custom',
  data: GetDiscriminatedUnionVariantContent<
    ValidationResultsOffsetArgs,
    '__kind',
    'Custom'
  >['fields']
): GetDiscriminatedUnionVariant<
  ValidationResultsOffsetArgs,
  '__kind',
  'Custom'
>;
export function validationResultsOffset<
  K extends ValidationResultsOffsetArgs['__kind'],
  Data,
>(kind: K, data?: Data) {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isValidationResultsOffset<
  K extends ValidationResultsOffset['__kind'],
>(
  kind: K,
  value: ValidationResultsOffset
): value is ValidationResultsOffset & { __kind: K } {
  return value.__kind === kind;
}
