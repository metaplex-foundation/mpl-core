/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getExternalPluginAdapterSchemaDecoder,
  getExternalPluginAdapterSchemaEncoder,
  getLinkedDataKeyDecoder,
  getLinkedDataKeyEncoder,
  type ExternalPluginAdapterSchema,
  type ExternalPluginAdapterSchemaArgs,
  type LinkedDataKey,
  type LinkedDataKeyArgs,
} from '.';

export type DataSectionInitInfo = {
  parentKey: LinkedDataKey;
  schema: ExternalPluginAdapterSchema;
};

export type DataSectionInitInfoArgs = {
  parentKey: LinkedDataKeyArgs;
  schema: ExternalPluginAdapterSchemaArgs;
};

export function getDataSectionInitInfoEncoder(): Encoder<DataSectionInitInfoArgs> {
  return getStructEncoder([
    ['parentKey', getLinkedDataKeyEncoder()],
    ['schema', getExternalPluginAdapterSchemaEncoder()],
  ]);
}

export function getDataSectionInitInfoDecoder(): Decoder<DataSectionInitInfo> {
  return getStructDecoder([
    ['parentKey', getLinkedDataKeyDecoder()],
    ['schema', getExternalPluginAdapterSchemaDecoder()],
  ]);
}

export function getDataSectionInitInfoCodec(): Codec<
  DataSectionInitInfoArgs,
  DataSectionInitInfo
> {
  return combineCodec(
    getDataSectionInitInfoEncoder(),
    getDataSectionInitInfoDecoder()
  );
}
