/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  getStructDecoder,
  getStructEncoder,
  getTupleDecoder,
  getTupleEncoder,
  type Codec,
  type Decoder,
  type Encoder,
  type GetDiscriminatedUnionVariant,
  type GetDiscriminatedUnionVariantContent,
} from '@solana/kit';
import {
  getAppDataUpdateInfoDecoder,
  getAppDataUpdateInfoEncoder,
  getLifecycleHookUpdateInfoDecoder,
  getLifecycleHookUpdateInfoEncoder,
  getLinkedAppDataUpdateInfoDecoder,
  getLinkedAppDataUpdateInfoEncoder,
  getLinkedLifecycleHookUpdateInfoDecoder,
  getLinkedLifecycleHookUpdateInfoEncoder,
  getOracleUpdateInfoDecoder,
  getOracleUpdateInfoEncoder,
  type AppDataUpdateInfo,
  type AppDataUpdateInfoArgs,
  type LifecycleHookUpdateInfo,
  type LifecycleHookUpdateInfoArgs,
  type LinkedAppDataUpdateInfo,
  type LinkedAppDataUpdateInfoArgs,
  type LinkedLifecycleHookUpdateInfo,
  type LinkedLifecycleHookUpdateInfoArgs,
  type OracleUpdateInfo,
  type OracleUpdateInfoArgs,
} from '.';

export type ExternalPluginAdapterUpdateInfo =
  | { __kind: 'LifecycleHook'; fields: readonly [LifecycleHookUpdateInfo] }
  | { __kind: 'Oracle'; fields: readonly [OracleUpdateInfo] }
  | { __kind: 'AppData'; fields: readonly [AppDataUpdateInfo] }
  | {
      __kind: 'LinkedLifecycleHook';
      fields: readonly [LinkedLifecycleHookUpdateInfo];
    }
  | { __kind: 'LinkedAppData'; fields: readonly [LinkedAppDataUpdateInfo] };

export type ExternalPluginAdapterUpdateInfoArgs =
  | { __kind: 'LifecycleHook'; fields: readonly [LifecycleHookUpdateInfoArgs] }
  | { __kind: 'Oracle'; fields: readonly [OracleUpdateInfoArgs] }
  | { __kind: 'AppData'; fields: readonly [AppDataUpdateInfoArgs] }
  | {
      __kind: 'LinkedLifecycleHook';
      fields: readonly [LinkedLifecycleHookUpdateInfoArgs];
    }
  | { __kind: 'LinkedAppData'; fields: readonly [LinkedAppDataUpdateInfoArgs] };

export function getExternalPluginAdapterUpdateInfoEncoder(): Encoder<ExternalPluginAdapterUpdateInfoArgs> {
  return getDiscriminatedUnionEncoder([
    [
      'LifecycleHook',
      getStructEncoder([
        ['fields', getTupleEncoder([getLifecycleHookUpdateInfoEncoder()])],
      ]),
    ],
    [
      'Oracle',
      getStructEncoder([
        ['fields', getTupleEncoder([getOracleUpdateInfoEncoder()])],
      ]),
    ],
    [
      'AppData',
      getStructEncoder([
        ['fields', getTupleEncoder([getAppDataUpdateInfoEncoder()])],
      ]),
    ],
    [
      'LinkedLifecycleHook',
      getStructEncoder([
        [
          'fields',
          getTupleEncoder([getLinkedLifecycleHookUpdateInfoEncoder()]),
        ],
      ]),
    ],
    [
      'LinkedAppData',
      getStructEncoder([
        ['fields', getTupleEncoder([getLinkedAppDataUpdateInfoEncoder()])],
      ]),
    ],
  ]);
}

export function getExternalPluginAdapterUpdateInfoDecoder(): Decoder<ExternalPluginAdapterUpdateInfo> {
  return getDiscriminatedUnionDecoder([
    [
      'LifecycleHook',
      getStructDecoder([
        ['fields', getTupleDecoder([getLifecycleHookUpdateInfoDecoder()])],
      ]),
    ],
    [
      'Oracle',
      getStructDecoder([
        ['fields', getTupleDecoder([getOracleUpdateInfoDecoder()])],
      ]),
    ],
    [
      'AppData',
      getStructDecoder([
        ['fields', getTupleDecoder([getAppDataUpdateInfoDecoder()])],
      ]),
    ],
    [
      'LinkedLifecycleHook',
      getStructDecoder([
        [
          'fields',
          getTupleDecoder([getLinkedLifecycleHookUpdateInfoDecoder()]),
        ],
      ]),
    ],
    [
      'LinkedAppData',
      getStructDecoder([
        ['fields', getTupleDecoder([getLinkedAppDataUpdateInfoDecoder()])],
      ]),
    ],
  ]);
}

export function getExternalPluginAdapterUpdateInfoCodec(): Codec<
  ExternalPluginAdapterUpdateInfoArgs,
  ExternalPluginAdapterUpdateInfo
> {
  return combineCodec(
    getExternalPluginAdapterUpdateInfoEncoder(),
    getExternalPluginAdapterUpdateInfoDecoder()
  );
}

// Data Enum Helpers.
export function externalPluginAdapterUpdateInfo(
  kind: 'LifecycleHook',
  data: GetDiscriminatedUnionVariantContent<
    ExternalPluginAdapterUpdateInfoArgs,
    '__kind',
    'LifecycleHook'
  >['fields']
): GetDiscriminatedUnionVariant<
  ExternalPluginAdapterUpdateInfoArgs,
  '__kind',
  'LifecycleHook'
>;
export function externalPluginAdapterUpdateInfo(
  kind: 'Oracle',
  data: GetDiscriminatedUnionVariantContent<
    ExternalPluginAdapterUpdateInfoArgs,
    '__kind',
    'Oracle'
  >['fields']
): GetDiscriminatedUnionVariant<
  ExternalPluginAdapterUpdateInfoArgs,
  '__kind',
  'Oracle'
>;
export function externalPluginAdapterUpdateInfo(
  kind: 'AppData',
  data: GetDiscriminatedUnionVariantContent<
    ExternalPluginAdapterUpdateInfoArgs,
    '__kind',
    'AppData'
  >['fields']
): GetDiscriminatedUnionVariant<
  ExternalPluginAdapterUpdateInfoArgs,
  '__kind',
  'AppData'
>;
export function externalPluginAdapterUpdateInfo(
  kind: 'LinkedLifecycleHook',
  data: GetDiscriminatedUnionVariantContent<
    ExternalPluginAdapterUpdateInfoArgs,
    '__kind',
    'LinkedLifecycleHook'
  >['fields']
): GetDiscriminatedUnionVariant<
  ExternalPluginAdapterUpdateInfoArgs,
  '__kind',
  'LinkedLifecycleHook'
>;
export function externalPluginAdapterUpdateInfo(
  kind: 'LinkedAppData',
  data: GetDiscriminatedUnionVariantContent<
    ExternalPluginAdapterUpdateInfoArgs,
    '__kind',
    'LinkedAppData'
  >['fields']
): GetDiscriminatedUnionVariant<
  ExternalPluginAdapterUpdateInfoArgs,
  '__kind',
  'LinkedAppData'
>;
export function externalPluginAdapterUpdateInfo<
  K extends ExternalPluginAdapterUpdateInfoArgs['__kind'],
  Data,
>(kind: K, data?: Data) {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isExternalPluginAdapterUpdateInfo<
  K extends ExternalPluginAdapterUpdateInfo['__kind'],
>(
  kind: K,
  value: ExternalPluginAdapterUpdateInfo
): value is ExternalPluginAdapterUpdateInfo & { __kind: K } {
  return value.__kind === kind;
}
