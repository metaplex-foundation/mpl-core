/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getTupleDecoder,
  getTupleEncoder,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';
import {
  getExternalCheckResultDecoder,
  getExternalCheckResultEncoder,
  getExternalPluginAdapterSchemaDecoder,
  getExternalPluginAdapterSchemaEncoder,
  getExtraAccountDecoder,
  getExtraAccountEncoder,
  getHookableLifecycleEventDecoder,
  getHookableLifecycleEventEncoder,
  type ExternalCheckResult,
  type ExternalCheckResultArgs,
  type ExternalPluginAdapterSchema,
  type ExternalPluginAdapterSchemaArgs,
  type ExtraAccount,
  type ExtraAccountArgs,
  type HookableLifecycleEvent,
  type HookableLifecycleEventArgs,
} from '.';

export type LifecycleHookUpdateInfo = {
  lifecycleChecks: Option<
    Array<readonly [HookableLifecycleEvent, ExternalCheckResult]>
  >;
  extraAccounts: Option<Array<ExtraAccount>>;
  schema: Option<ExternalPluginAdapterSchema>;
};

export type LifecycleHookUpdateInfoArgs = {
  lifecycleChecks: OptionOrNullable<
    Array<readonly [HookableLifecycleEventArgs, ExternalCheckResultArgs]>
  >;
  extraAccounts: OptionOrNullable<Array<ExtraAccountArgs>>;
  schema: OptionOrNullable<ExternalPluginAdapterSchemaArgs>;
};

export function getLifecycleHookUpdateInfoEncoder(): Encoder<LifecycleHookUpdateInfoArgs> {
  return getStructEncoder([
    [
      'lifecycleChecks',
      getOptionEncoder(
        getArrayEncoder(
          getTupleEncoder([
            getHookableLifecycleEventEncoder(),
            getExternalCheckResultEncoder(),
          ])
        )
      ),
    ],
    [
      'extraAccounts',
      getOptionEncoder(getArrayEncoder(getExtraAccountEncoder())),
    ],
    ['schema', getOptionEncoder(getExternalPluginAdapterSchemaEncoder())],
  ]);
}

export function getLifecycleHookUpdateInfoDecoder(): Decoder<LifecycleHookUpdateInfo> {
  return getStructDecoder([
    [
      'lifecycleChecks',
      getOptionDecoder(
        getArrayDecoder(
          getTupleDecoder([
            getHookableLifecycleEventDecoder(),
            getExternalCheckResultDecoder(),
          ])
        )
      ),
    ],
    [
      'extraAccounts',
      getOptionDecoder(getArrayDecoder(getExtraAccountDecoder())),
    ],
    ['schema', getOptionDecoder(getExternalPluginAdapterSchemaDecoder())],
  ]);
}

export function getLifecycleHookUpdateInfoCodec(): Codec<
  LifecycleHookUpdateInfoArgs,
  LifecycleHookUpdateInfo
> {
  return combineCodec(
    getLifecycleHookUpdateInfoEncoder(),
    getLifecycleHookUpdateInfoDecoder()
  );
}
