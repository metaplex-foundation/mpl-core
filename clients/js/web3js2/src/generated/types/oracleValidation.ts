/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  getStructDecoder,
  getStructEncoder,
  getUnitDecoder,
  getUnitEncoder,
  type Codec,
  type Decoder,
  type Encoder,
  type GetDiscriminatedUnionVariant,
  type GetDiscriminatedUnionVariantContent,
} from '@solana/kit';
import {
  getExternalValidationResultDecoder,
  getExternalValidationResultEncoder,
  type ExternalValidationResult,
  type ExternalValidationResultArgs,
} from '.';

export type OracleValidation =
  | { __kind: 'Uninitialized' }
  | {
      __kind: 'V1';
      create: ExternalValidationResult;
      transfer: ExternalValidationResult;
      burn: ExternalValidationResult;
      update: ExternalValidationResult;
    };

export type OracleValidationArgs =
  | { __kind: 'Uninitialized' }
  | {
      __kind: 'V1';
      create: ExternalValidationResultArgs;
      transfer: ExternalValidationResultArgs;
      burn: ExternalValidationResultArgs;
      update: ExternalValidationResultArgs;
    };

export function getOracleValidationEncoder(): Encoder<OracleValidationArgs> {
  return getDiscriminatedUnionEncoder([
    ['Uninitialized', getUnitEncoder()],
    [
      'V1',
      getStructEncoder([
        ['create', getExternalValidationResultEncoder()],
        ['transfer', getExternalValidationResultEncoder()],
        ['burn', getExternalValidationResultEncoder()],
        ['update', getExternalValidationResultEncoder()],
      ]),
    ],
  ]);
}

export function getOracleValidationDecoder(): Decoder<OracleValidation> {
  return getDiscriminatedUnionDecoder([
    ['Uninitialized', getUnitDecoder()],
    [
      'V1',
      getStructDecoder([
        ['create', getExternalValidationResultDecoder()],
        ['transfer', getExternalValidationResultDecoder()],
        ['burn', getExternalValidationResultDecoder()],
        ['update', getExternalValidationResultDecoder()],
      ]),
    ],
  ]);
}

export function getOracleValidationCodec(): Codec<
  OracleValidationArgs,
  OracleValidation
> {
  return combineCodec(
    getOracleValidationEncoder(),
    getOracleValidationDecoder()
  );
}

// Data Enum Helpers.
export function oracleValidation(
  kind: 'Uninitialized'
): GetDiscriminatedUnionVariant<
  OracleValidationArgs,
  '__kind',
  'Uninitialized'
>;
export function oracleValidation(
  kind: 'V1',
  data: GetDiscriminatedUnionVariantContent<
    OracleValidationArgs,
    '__kind',
    'V1'
  >
): GetDiscriminatedUnionVariant<OracleValidationArgs, '__kind', 'V1'>;
export function oracleValidation<
  K extends OracleValidationArgs['__kind'],
  Data,
>(kind: K, data?: Data) {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isOracleValidation<K extends OracleValidation['__kind']>(
  kind: K,
  value: OracleValidation
): value is OracleValidation & { __kind: K } {
  return value.__kind === kind;
}
