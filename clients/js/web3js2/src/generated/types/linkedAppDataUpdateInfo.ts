/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';
import {
  getExternalPluginAdapterSchemaDecoder,
  getExternalPluginAdapterSchemaEncoder,
  type ExternalPluginAdapterSchema,
  type ExternalPluginAdapterSchemaArgs,
} from '.';

export type LinkedAppDataUpdateInfo = {
  schema: Option<ExternalPluginAdapterSchema>;
};

export type LinkedAppDataUpdateInfoArgs = {
  schema: OptionOrNullable<ExternalPluginAdapterSchemaArgs>;
};

export function getLinkedAppDataUpdateInfoEncoder(): Encoder<LinkedAppDataUpdateInfoArgs> {
  return getStructEncoder([
    ['schema', getOptionEncoder(getExternalPluginAdapterSchemaEncoder())],
  ]);
}

export function getLinkedAppDataUpdateInfoDecoder(): Decoder<LinkedAppDataUpdateInfo> {
  return getStructDecoder([
    ['schema', getOptionDecoder(getExternalPluginAdapterSchemaDecoder())],
  ]);
}

export function getLinkedAppDataUpdateInfoCodec(): Codec<
  LinkedAppDataUpdateInfoArgs,
  LinkedAppDataUpdateInfo
> {
  return combineCodec(
    getLinkedAppDataUpdateInfoEncoder(),
    getLinkedAppDataUpdateInfoDecoder()
  );
}
